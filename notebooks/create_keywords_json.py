# Physics
nuclear_physics = [
    'alpha rays (theory)',
    'beta rays (theory)',
    'electron beams',
    'gamma rays (theory)',
    'ion beams (nuclear interactions)',
    'nuclear decay',
    'nuclear engines (theory)',
    'nuclear fission',
    'nuclear fuels',
    'nuclear fusion (theory)',
    'nuclear magnetic resonance',
    'nuclear particles',
    'nuclear physics',
    'nuclear power sources (theory)',
    'nuclear propulsion systems (theory)',
    'nuclear reactions',
    'nuclear reactor theory',
    'nuclear reactors',
    'nuclear research equipment',
    'nuclear scattering',
    'nuclear structure',
    'nuclear test equipment',
    'proton beams (nuclear interactions)',
    'radioisotopes',
    'reactor radiation safety measures (space applications)',
    'reactor theory',
    'space-power reactors (theory)',
    'x-ray radiation (theory)'
                    ]

optics = [
    'Bragg cells (optical applications)',
    'Cassegrain optics',
    'coherent light',
    'electron optics theory',
    'fiber optics',
    'geometrical optics',
    'infrared optics',
    'infrared radiation effects (optical applications)',
    'infrared signatures (optical applications)',
    'infrared spectra',
    'lens theory',
    'lenses (optical properties)',
    'light absorption',
    'light reflection',
    'light scattering',
    'light transmission',
    'liquid optics',
    'luminescence (optics)',
    'mirror interference (optics)',
    'modulation (optics)',
    'nonlinear optics',
    'optical bistability',
    'optical coatings',
    'optical communications (theory)',
    'optical fibers',
    'optical imaging devices (theory)',
    'optical materials',
    'optical properties',
    'optical waveguides',
    'optics',
    'optoelectronics (optics)',
    'photon beams',
    'photonics',
    'polarization (optics)',
    'refraction (optics)',
    'Schlieren optics',
    'telescopes (optical properties)',
    'tomography (optics)',
    'ultraviolet radiation (optics)',
    'wave propagation (optics)',
    'x-ray optics'
]


# Engineering
eeeng = [
    'amplifiers',
    'audio amplifiers',
    'batteries (electrical design)',
    'bridge circuits',
    'capacitors',
    'cathode ray tubes (electrical design)',
    'charge-coupled devices',
    'chips (integrated circuits)',
    'chokes (electric, electronic)',
    'circuit simulation (integrated circuits)',
    'circuit theory',
    'converters',
    'crystals (electronic applications)',
    'dielectrics (electronic application)',
    'diodes',
    'dividers (electric)',
    'electric circuits',
    'electric filters',
    'electric motors',
    'electric power units (electrical design)',
    'electrical components',
    'electrical engineering',
    'electrical relays',
    'electromechanics',
    'electron beam devices',
    'electron tubes',
    'electronic circuits',
    'electronic components',
    'electronic packaging',
    'electronic test equipment',
    'electronics',
    'field effect transistors (FET)',
    'field programmable gate arrays',
    'filters (electric, electronic)',
    'fuses (electric)',
    'generators (electrical design)',
    'inductors (electric)',
    'insulation (electric, electronic)',
    'integrated circuits',
    'inverters',
    'Kalman filters',
    'klystrons',
    'light emitting diodes (LED)',
    'lithography (circuit fabrication)',
    'magnets (electrical, electronics application)',
    'microcircuits',
    'microelectronics',
    'microminiaturization',
    'modulators (electric, electronic devices)',
    'nanodevices (electronic)',
    'networks (circuitry)',
    'opto-acoustic electronics',
    'optoelectronics (applications)',
    'oscillators',
    'photoelectric devices',
    'photomultipliers',
    'power amplifiers',
    'power packs (electric)',
    'power supplies electric)',
    'printed circuits',
    'programmable logic devices',
    'radomes (electrical properties)',
    'rail accelerators, railguns, launchers (theory)',
    'reconfigurable hardware',
    'rectifiers',
    'regulators (voltage, current)',
    'resistors',
    'semiconductor devices',
    'servomechanisms (electrical aspects)',
    'signal generators (applications)',
    'silicon cells (electrical properties)',
    'single event transients',
    'single event upsets',
    'sneak circuit analysis',
    'solar cells (electrical design)',
    'solar state circuitry',
    'solid state devices',
    'superconductivity (applications)',
    'surface wave acoustic devices (electronic design)',
    'switches',
    'switching circuits',
    'switching theory',
    'test equipment (electrical properties)',
    'thyratrons',
    'transducers',
    'transformers',
    'transistors',
    'transmission lines',
    'traveling wave tubes',
    'triodes',
    'tunnel diodes',
    'vacuum tubes',
    'very large scale integration (VLSI)',
    'VHSIC',
    'waveguides'
]

struct_mech = [
    'acoustoelasticity',
    'adhesive joints (structural stability)',
    'aeroelasticity (structural flexibility)',
    'beams (structures)',
    'bending',
    'bolted joints',
    'bonded structures',
    'buckling',
    'columns',
    'combined loads',
    'compression',
    'compression loads',
    'compression strength (structural)',
    'cones (structures)',
    'crack propagation',
    'cracks',
    'cylinders (structures)',
    'dynamic structural analysis',
    'elasticity',
    'energy',
    'energy absorption (structures)',
    'fatigue (structural)',
    'filament wound structures (design and tests)',
    'flutter (structural)',
    'fracture mechanics',
    'honeycomb structures',
    'lightweight structural elements',
    'lightweight structures',
    'panels (structures)',
    'photoelasticity',
    'plasticity',
    'plates (structural elements)',
    'rings (structures)',
    'riveted joints',
    'sandwich structures',
    'self assembling structures',
    'shear loads',
    'shear strength (structures)',
    'shells (structures)',
    'shock testing (structural analysis)',
    'stress (structural)',
    'stress analysis',
    'structural analysis',
    'structural design',
    'structural elements',
    'structural fatigue',
    'structural health monitoring',
    'structural mechanics',
    'structural testing',
    'structural theory',
    'structural vibration effects',
    'tensile strength (structures)',
    'tension loads',
    'thermal stress',
    'thermoelasticity (structural materials)',
    'trusses',
    'vibration (structures)',
    'vibration testing',
    'viscoelasticity (structural materials)',
    'wave propagation (structural response)',
    'weight analysis',
    'weld strength',
    'welded structures'
]

# Geosciences
geophysics = [
    'aeronomy',
    'aerosols (atmospheric physics )',
    'air glow',
    'atmospheric boundary layers (atmospheric physics)',
    'atmospheric circulation (atmospheric physics)',
    'atmospheric density',
    'atmospheric electricity',
    'atmospheric optics',
    'atmospheric physics',
    'atmospheric radiation',
    'atmospheric scattering',
    'atmospheric structure',
    'atmospheric studies (physical processes)',
    'atmospherics',
    'aurora',
    'biosphere (physical processes)',
    'continental drift',
    'Earth magnetic field',
    'Earth origins',
    'Earth structure',
    'Earth-reflected radiation',
    'fault detection (geological)',
    'general circulation models (atmosphere)',
    'geochemistry',
    'geodesy (physics)',
    'geological surveys',
    'geology (Earth structure)',
    'geomagnetism',
    'geomorphology',
    'geophysical sensors (applications)',
    'geophysics',
    'glaciology',
    'gravitational anomalies (terrestrial)',
    'gravitational theory (terrestrial)',
    'gravitational waves (terrestrial)',
    'greenhouse effect (atmospheric physics)',
    'hydrosphere studies',
    'infrared spectrometry (atmosphere)',
    'ionosphere (Earth)',
    'ionospheric electron density',
    'ionospheric physics',
    'ionospheric plasmas',
    'ionospheric scintillation',
    'lithology',
    'lower atmosphere studies',
    'magnetism (terrestrial)',
    'magnetosphere (Earth)',
    'noctilucent clouds',
    'ozone depletion (atmospheric physics)',
    'plate tectonics',
    'rocket/balloon geophysical studies',
    'seismology',
    'soil mechanics',
    'soil sampling',
    'solar-atmosphere interactions',
    'space geodesy',
    'space weather',
    'stratosphere',
    'stratospheric circulation',
    'tectonics',
    'upper atmosphere studies',
    'very long baseline interferometry (geophysics applications)',
    'volcanoes',
    'whistlers (upper atmosphere)'
]

energy_prd_conv = [
    'alternative energy sources',
    'Brayton cycle turbines (applications)',
    'chemical energy conversion devices',
    'electric batteries (applications)',
    'electric energy conversion devices',
    'energy management technology',
    'energy production',
    'energy storage',
    'fuel cells',
    'generators (applications)',
    'geophysical energy conversion devices',
    'hybrid energy conversion devices',
    'magnetohydrodynamic (MHD) energy conversion device',
    'microwave energy conversion devices',
    'microwave energy transmission',
    'photovoltaic energy conversion devices',
    'silicon cells (applications)',
    'solar cells (energy conversion)',
    'solar generators',
    'solar heating (space applications)',
    'solar panels (energy conversion)',
    'solar power (space applications)',
    'thermionic energy conversion devices',
    'thermoelectricity'
]
broad_topics = {'Physics': {'Nuclear Physics': nuclear_physics,
                            'Optics': optics,
                            },
                
                'Engineering': {'Electronics and Electronic Engineering': eeeng,
                                'Structural Mechanics': struct_mech
                            },
                

                'Geosciences': {'Geophysics': geophysics,
                                'Energy Production and Conversion': energy_prd_conv}
    }
specific_categories = []
for topic in broad_topics.keys():
    specific_categories.extend(list(broad_topics[topic].keys()))

specific_categories

import json
with open("keywords.json", "w") as outfile:
    json.dump(broad_topics, outfile)
