# -*- coding: utf-8 -*-
"""download_ntrs_docs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g83xP6q9-_sNk9PineUthmVpA9oKwtsm
"""

from google.colab import drive
drive.mount('/drive')

import os
import json
import requests
from pathlib import Path
from pprint import pprint

dst_folder = '/drive/MyDrive/NASA Space Apps Challenge/corpus'

subject_categories = ['Nuclear Physics',
                    'Optics',
                    'Electronics and Electrical Engineering',
                    'Structural Mechanics',
                    'Geophysics',
                    'Energy Production and Conversion']

for cat in subject_categories:
    cat = cat.replace(' ', '%20')
    # print(cat)
    api_url = f"https://ntrs.nasa.gov/api/citations/search?center=CDMS&subjectCategory={cat}"
    # print(api_url)
    response = requests.get(api_url)
    content = response.json()
    results = content['results']
    print("Results: ", len(results))

    for result in results:
        if result['downloads']:
            file_id = result['id']
            file_sbj_cats = result['subjectCategories']
            item_link = result['downloads'][0]['links']['pdf']

            # For now, we only consider documents that belong to only one subject category
            if len(file_sbj_cats) == 1:
                pdf_link = 'https://ntrs.nasa.gov' + item_link
                filename = Path(os.path.join(dst_folder, f'{file_id}.pdf'))

                title = result['title']
                abstract = result['abstract']
                if abstract:                
                    print(file_sbj_cats[0])
                    print(filename)
                    
                    response = requests.get(pdf_link)
                    filename.write_bytes(response.content)

                    doc_dict = {'id': file_id,
                                'subjectCategory': file_sbj_cats[0],
                                'title':title,
                                'abstract': abstract,
                                }
                    with open(os.path.join(dst_folder, str(file_id)+'.json'), "w") as write_file:
                        json.dump(doc_dict, write_file, indent=4)
    # break

"""# End

*--*
"""